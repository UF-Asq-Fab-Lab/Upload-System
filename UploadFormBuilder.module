<?php
/**
 * A²Fab Lab Uploads Manager Module
 *
 * Developed for the A² Fab Lab at the University of Florida.
 * Builds and injects forms via hooks to the frontend and backend.
 *
 * Thomas R Storey, 2015
 * Licensed under MIT License, see LICENSE.TXT
 *
 * http://fablab.arts.ufl.edu
 * https://github.com/UF-Asq-Fab-Lab
 *
 */

class UploadFormBuilder extends ModuleJS implements Module{

  protected $page;
  protected $event;
  protected $config_data;

  public static function getModuleInfo() {
    return array(
      'title' => 'A² Fab Lab Upload Form Builder',
      'summary' => 'Builds forms for the upload system',
      'version' => 100,
      'author' => "Thomas R Storey",
      'autoload' => false,
      'singular' => false,
      'permanent' => false,
      'requires' => array("Uploader>=1.0.0")
    );
  }

  public function init(){

  }

  public function __construct($event, $page){
    $this->event = $event;
    $this->page = $page;
    $this->config_data = $this->modules->getModuleConfigData("Uploader");
  }

  public function buildUploadForm(){
    //build something using the inputfield form, return the rendered output
    $class = $this->className();
    $inputfields = $this->modules->get("Uploader")->getInputfields();
    $formfields = $inputfields['upload_form'];
    $markup = "<form id='upload_form' method='post' action='./' enctype='multipart/form-data'>";
    foreach ($formfields as $key => $field) {
        $type = $field['type'];
        $id = $field['id'];
        $label = $field['label'];
        $name = $field['name'];
        $required = $field['required'];
        $value = $field['value'];
        if($type != 'submit'){
          $markup.= "<label for='{$name}'>{$label}</label>";
        }
        if($type == 'select'){
          $markup.="<select id='{$id}' name={$name} value='{$value}' {$required}>";
          if($key == 'material'){
            $materials = wire('pages')->find("template=material, check_access=0, include=all");
            echo count($materials);
            foreach ($materials as $pagekey => $material) {
              $markup.= "<option value='{$material->name}'>{$material->title}</option>";
            }
          } else if($key == 'units'){
            $markup.= "<option value='in'>in</option><option value='cm'>cm</option><option value='mm'>mm</option>";
          }
          $markup.="</select>";
        } else if ($type == 'textarea'){
          $markup.="<textarea value={$value} id={$id} $name={$name}, {$required}></textarea>";
        } else {
          $markup.="<input type='{$type}' id='{$id}' name={$name} value='{$value}' {$required}>";
          $markup.="</input>";
        }
    }
    $markup.="</form>";
    $modulesUrl = wire('config')->urls->siteModules;
    $markup = "<link rel='stylesheet' href='{$modulesUrl}Uploader/Uploader.css' />".$markup;
    return $markup;

    // $wrapper = $this->modules->get("InputfieldForm");
    // $wrapper->attr('id', "Uploader");
    // $wrapper->attr('title', "Upload Form");
    // $inputfields = $this->modules->get("Uploader")->getInputfields();
    // $formfields = $inputfields['upload_form'];
    // foreach ($formfields as $key => $array) {
    //     $field = $this->modules->get($array['type']);
    //     foreach ($array as $key => $value) {
    //       if(!strcmp($key, "type")) continue;
    //       if(!strcmp($key, "options")){
    //         $field->options = $value;
    //       } else if(!strcmp($key, "label")) {
    //         $field->label = $value;
    //       } else if(!strcmp($key, "findPagesSelector")) {
    //         $field->findPagesSelector = $value;
    //       } else if(!strcmp($key, "inputfield")) {
    //         $field->inputfield = $value;
    //       } else {
    //         $field->attr($key, $value);
    //       }
    //     }
    //     $wrapper->append($field);
    // }
    // $cssinclude = '<link rel="stylesheet" type="text/css" href="%s"><link rel="stylesheet" type="text/css" href="%s">';
    // $cssinclude = sprintf($cssinclude, $this->config->urls->$class . "$class.css", $this->config->urls->adminTemplates."styles/font-awesome/css/font-awesome.min.css");
    //
    // return $wrapper->render().$cssinclude;
  }

  public function buildConfirmForm(){
    //build something using the inputfield form, return the rendered output
    $get = $this->input->get;
    if($this->pages->get("hash=$get->confirm, confirm=1, template=upload")->id){
      return "<p>File confirmed for printing! Thanks!</p>";
    } else {
      return "<p>Something went wrong while confirming your file.</p>";
    }
  }

  public function buildEditTab(){
    //get the form from the event object, return it with new tab appended
    $form = $this->event->return;
    $uploadpage = $this->event->object->getPage();
    $confirmPage = $this->pages->get($this->config_data["confirm_page_id"]);
    $wrapper = new InputfieldWrapper();
    $url = $confirmPage->httpUrl."?confirm=".$uploadpage->hash;
    $id = 'UploadConfirm';
    $title = $this->_('Request Confirmation'); // Tab Label: Request Confirmation
    $wrapper->attr('id', $id);
    $wrapper->attr('title', $title);

    $field = $this->modules->get('InputfieldText');
    $field->id = "subject";
    $field->name = "subject";
    $field->label = "Confirmation Request Subject";
    $field->value = $this->config_data["request_subject"];
    //$field->value = $this->uploader->get('request_subject');
    $wrapper->append($field);

    $field = $this->modules->get('InputfieldTextarea');
    $field->id = "message";
    $field->name = "message";
    $field->label = "Confirmation Request Message";
    $field->value = str_replace("[url]", $url, $this->config_data["request_body"]);
    $wrapper->append($field);

    $button = $this->modules->get('InputfieldSubmit');
    $button->id = "send_request";
    $button->name = "send_request";
    $button->value = "Send Message";
    $button->label = 'Send Confirmation Request';
    $button->icon = 'paper-plane';

    $wrapper->append($button);

    return $wrapper;
  }

  protected function sendEmail($wrapper){
    $mailer = wireMail();
    $mailer->to("storey.thomas@gmail.com", "Admin")->from($this->config_data['contact_address'], 'UF A² Fab Lab Uploads Manager');
    $mailer->subject($wrapper->get("subject"))->body($wrapper->get("message"));
    $recepients = $mailer->send();
    return $recepients;
  }

}
?>
